package mds.model;

public class Model {
    //------------------------------------input------------------------------------
    // N — максимальное число входящих заявок (условие окончания моделирования)
    private int numberOfRequests;
    // NK — количество каналов
    private int numberOfChannels;
    // LMAX — максимально допустимая длина очереди
    private int queueSize;
    //------------------------------------input------------------------------------

    //--------------------------------------------statistics---------------------------------------------
    // T - текущее модельное время, изменяющееся скачком между моментами возникновения событий в системе
    private int modelTime;
    // TA — момент прихода очередной заявки (время, прошедшее с начала моделирования)
    private int timeOfNextRequest;
    // K — счетчик пришедших заявок
    private int requestsCount;
    // KS — счетчик обслуженных заявок
    private int servedRequestsCount;
    // L — текущая длина очереди
    private int queueLength;
    // LOS — счетчик отказов (заявок, поучивших отказ в обслуживании)
    private int bounceCount;
    //--------------------------------------------statistics---------------------------------------------

    //----------------------------------------------arrays-----------------------------------------------
    // OCP[i] — признак занятости i-го канала (0 — канал свободен, 1 — канал занят)
    private boolean[] busyChannels;
    // TD[i] — ожидаемый момент выхода заявки из i-го канала (время, прошедшее с начала моделирования).
    private int[] channelReleaseExpectedTime;
    // TOS[i] — счетчик суммарного времени занятости i-го канала —
    // сколько единиц модельного времени в течение всего процесса моделирования канал был занят
    private int[] chanelTotalBusyTime;
    // TL[M] — суммарное время пребывания системы в состоянии, когда в ней ровно M заявок
    private int[] systemTotalTimeWithRequests;
    //----------------------------------------------arrays-----------------------------------------------

    //----------------------------------------------helpers----------------------------------------------
    // MIN — ближайший момент выхода обслуженной заявки из канала, считая от текущего модельного времени
    private int nearestMomentOfRequestRelease;
    // S — номер канала, который в текущем состоянии системы освободится первым (в момент времени MIN)
    private int firstReleasedChannelNumber;
    // DTA — время между приходами заявок (генерируемая в процессе моделирования случайная величина)
    private int timeBetweenRequests;
    // DTS — время обслуживания заявки в канале (генерируемая в процессе моделирования случайная величина)
    private int requestServiceTime;
    //----------------------------------------------helpers----------------------------------------------
}
